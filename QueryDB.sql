USE master
GO
--ALTER DATABASE DBACCESS SET SINGLE_USER WITH ROLLBACK IMMEDIATE
--GO
CREATE DATABASE DBACCESS
ON   
(NAME = DBACCESS_dat,  
FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\DBACCESS_dat',
SIZE = 4GB,
--MAXSIZE = 50GB,  
FILEGROWTH = 2GB)
LOG ON  
(NAME =  DBACCESS_log,
FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\DBACCESSLOG.ldf',
SIZE = 200MB,
--MAXSIZE = 25MB,
FILEGROWTH = 50MB)
GO
--exec sp_spaceused
USE DBACCESS
GO
CREATE TABLE VENUE(
IDV INT IDENTITY(1,1) PRIMARY KEY,
IDEVENUE INT UNIQUE,
VNAME VARCHAR(150),
VURL VARCHAR(150),
ACCTOILET BIT,
CHANGEPLACE BIT,
HOIST BIT,
WET BIT
)
GO
CREATE TABLE VUSER(
IDU INT IDENTITY(1,1) PRIMARY KEY,
NICK VARCHAR(200),
LOCAT VARCHAR(90)
)
GO
CREATE TABLE VREVIEW(
IDREV INT PRIMARY KEY IDENTITY(1,1),
IDU INT FOREIGN KEY REFERENCES VUSER(IDU),
IDV INT FOREIGN KEY REFERENCES VENUE(IDV),
IDEVREV INT UNIQUE,
RANK DECIMAL(2,1),
VMONTH TINYINT,
VYEAR SMALLINT,
OVERVIEW VARCHAR(300),
TRANSPORT VARCHAR(300),
ACCESS VARCHAR(300),
TOILET VARCHAR(300),
STAFF VARCHAR(300),
ANYTHING VARCHAR(300)
)
GO
CREATE PROCEDURE PR_INSUPD_VENUE
@IDV INT,@IDEVENUE INT,@VNAME VARCHAR(150),@VURL VARCHAR(150),
@ACCTOILET BIT,@CHANGEPLACE BIT,@HOIST BIT,@WET BIT
AS
SET NOCOUNT ON
IF @IDV > 0
BEGIN
	UPDATE VENUE SET ACCTOILET=ISNULL(@ACCTOILET,ACCTOILET),CHANGEPLACE=ISNULL(@CHANGEPLACE,CHANGEPLACE),HOIST=ISNULL(@HOIST,HOIST),WET=ISNULL(@WET,WET) WHERE IDV=@IDV
	SELECT @IDV AS ID
END
ELSE
BEGIN
	SET @IDV=(SELECT IDV FROM VENUE WHERE IDEVENUE=@IDEVENUE)
	IF @IDV IS NULL -- NEW
	BEGIN
		INSERT INTO VENUE VALUES (@IDEVENUE,@VNAME,@VURL,@ACCTOILET,@CHANGEPLACE,@HOIST,@WET)
		SELECT IDENT_CURRENT('VENUE')
	END
	ELSE--ALREADY RECORDED
	BEGIN
		UPDATE VENUE SET ACCTOILET=ISNULL(@ACCTOILET,ACCTOILET),CHANGEPLACE=ISNULL(@CHANGEPLACE,CHANGEPLACE),HOIST=ISNULL(@HOIST,HOIST),WET=ISNULL(@WET,WET) WHERE IDV=@IDV
		SELECT @IDV AS ID
	END
END
GO
CREATE PROCEDURE PR_INSUPD_VUSER
@IDU INT,@NICK VARCHAR(200),@LOCAT VARCHAR(90)
AS
SET NOCOUNT ON
IF @IDU > 0
BEGIN
	UPDATE VUSER SET NICK=ISNULL(@NICK,NICK),LOCAT=ISNULL(@LOCAT,LOCAT) WHERE IDU=@IDU
	SELECT @IDU AS ID
END
ELSE
BEGIN
	SET @IDU=(SELECT IDU FROM VUSER WHERE NICK=@NICK)
	IF @IDU IS NULL -- NEW
	BEGIN
		INSERT INTO VUSER VALUES (@NICK,@LOCAT)
		SELECT IDENT_CURRENT('VUSER')
	END
	ELSE--ALREADY RECORDED
	BEGIN
		UPDATE VUSER SET NICK=ISNULL(@NICK,NICK),LOCAT=ISNULL(@LOCAT,LOCAT) WHERE IDU=@IDU
		SELECT @IDU AS ID
	END
END
GO
CREATE PROCEDURE PR_INSUPD_VREVIEW
@IDREV INT,@IDU INT,@IDV INT,@IDEVREV INT,@RANK DECIMAL(2,1),@VMONTH TINYINT,@VYEAR SMALLINT,
@OVERVIEW VARCHAR(300),@TRANSPORT VARCHAR(300),@ACCESS VARCHAR(300),
@TOILET VARCHAR(300),@STAFF VARCHAR(300),@ANYTHING VARCHAR(300)
AS
SET NOCOUNT ON
IF @IDREV > 0
BEGIN
	UPDATE VREVIEW SET RANK=ISNULL(@RANK,RANK),OVERVIEW=ISNULL(@OVERVIEW,OVERVIEW),
	TRANSPORT=ISNULL(@TRANSPORT,TRANSPORT),ACCESS=ISNULL(@ACCESS,ACCESS),TOILET=ISNULL(@TOILET,TOILET),
	STAFF=ISNULL(@STAFF,STAFF),ANYTHING=ISNULL(@ANYTHING,ANYTHING) WHERE IDREV=@IDREV
	SELECT @IDREV AS ID
END
ELSE
BEGIN
	SET @IDREV=(SELECT IDREV FROM VREVIEW WHERE IDEVREV=@IDEVREV)
	IF @IDREV IS NULL -- NEW
	BEGIN
		INSERT INTO VREVIEW VALUES (@IDU,@IDV,@IDEVREV,@RANK,@VMONTH,@VYEAR,@OVERVIEW,@TRANSPORT,@ACCESS,@TOILET,@STAFF,@ANYTHING)
		SELECT IDENT_CURRENT('VREVIEW')
	END
	ELSE--ALREADY RECORDED
	BEGIN
		UPDATE VREVIEW SET RANK=ISNULL(@RANK,RANK),OVERVIEW=ISNULL(@OVERVIEW,OVERVIEW),
		TRANSPORT=ISNULL(@TRANSPORT,TRANSPORT),ACCESS=ISNULL(@ACCESS,ACCESS),TOILET=ISNULL(@TOILET,TOILET),
		STAFF=ISNULL(@STAFF,STAFF),ANYTHING=ISNULL(@ANYTHING,ANYTHING) WHERE IDREV=@IDREV
		SELECT @IDREV AS ID
	END
END
GO

CREATE TABLE SUMMARY(
IDS INT PRIMARY KEY IDENTITY(1,1),
IDV INT FOREIGN KEY REFERENCES VENUE(IDV),
IDT INT,
SUM VARCHAR(200)
)
GO

CREATE PROCEDURE PR_INSUPD_SUMMARY
@IDS INT,@IDV INT,@IDT INT,@SUM VARCHAR(200)
AS
SET NOCOUNT ON
IF @IDS > 0
BEGIN
	UPDATE SUMMARY SET SUM=ISNULL(@SUM,SUM) WHERE IDS=@IDS
	SELECT @IDS AS ID
END
ELSE
BEGIN
	SET @IDS=(SELECT IDS FROM SUMMARY WHERE IDV=@IDV AND IDT=@IDT)
	IF @IDS IS NULL -- NEW
	BEGIN
		INSERT INTO SUMMARY VALUES (@IDV,@IDT,@SUM)
		SELECT IDENT_CURRENT('SUMMARY')
	END
	ELSE--ALREADY RECORDED
	BEGIN
		UPDATE SUMMARY SET SUM=ISNULL(@SUM,SUM) WHERE IDS=@IDS
		SELECT @IDS AS ID
	END
END
GO

CREATE PROCEDURE PR_IF_SUMMARY
@IDV INT,@IDT INT
AS
SET NOCOUNT ON
DECLARE @NUM SMALLINT
SET @NUM=(SELECT COUNT(0) FROM SUMMARY WHERE IDV=@IDV AND IDT=@IDT)
SELECT @NUM
GO

EXEC PR_IF_SUMMARY 5,1
GO

SELECT count(0) FROM SUMMARY WHERE IDT=1
GO
SELECT COUNT(0) FROM VENUE
GI


SELECT count(*) as AMOUNT FROM VREVIEW WHERE VYEAR>2016

SELECT count(*) as AMOUNT,IDV FROM VREVIEW
GROUP BY IDV ORDER BY AMOUNT DESC

SELECT * FROM SUMMARY

SELECT VE.IDV,VE.VNAME,VE.ACCTOILET,VE.CHANGEPLACE,VE.HOIST,VE.WET FROM VENUE VE
SELECT VR.RANK,VR.VYEAR,VR.VMONTH,VR.OVERVIEW,VR.TRANSPORT,VR.ACCESS,VR.TOILET,VR.STAFF,VR.ANYTHING FROM VREVIEW VR

SELECT VE.IDV,VE.VNAME,VE.ACCTOILET,VE.CHANGEPLACE,VE.HOIST,VE.WET
,VR.RANK,VR.VYEAR,VR.VMONTH,VR.OVERVIEW,VR.TRANSPORT,VR.ACCESS,VR.TOILET,VR.STAFF,VR.ANYTHING 
FROM VREVIEW VR INNER JOIN VENUE VE
ON VR.IDV=VE.IDV

select * from SUMMARY
